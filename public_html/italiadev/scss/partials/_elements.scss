//Base button, gets extended

.button {
	position  : relative;
	display   : inline-block;
	margin    : 2vw auto 0;
	color     : white;
	text-align: center;
	z-index   : 10;

	span {
		position: relative;
		display : inline-block;
		z-index : 20;
	}
}

.button-green {
	@extend .button;

	&::before {
		background-color: darken($color1, 10%);
	}
}

.button-blue {
	@extend .button;

	&::before {
		background-color: darken($color2, 10%);
	}
}

/*********************************************************

888b     d888          888            d8b
8888b   d8888          888            Y8P
88888b.d88888          888
888Y88888P888  8888b.  888888 888d888 888 888  888
888 Y888P 888     "88b 888    888P"   888 `Y8bd8P'
888  Y8P  888 .d888888 888    888     888   X88K
888   "   888 888  888 Y88b.  888     888 .d8""8b.
888       888 "Y888888  "Y888 888     888 888  888

*********************************************************/

//Context information - it's contained in the matrix fields everything is styling.
#v-context {
	display        : flex;
	flex-flow      : row wrap;
	justify-content: space-between;
	align-items    : center;
	align-content  : flex-start;
	padding        : 1em 0;
	margin         : 1em 1vw 0;
	width          : 98vw;
	box-shadow     : none;
	@include respond-to(tablet) {
		padding   : 1em;
		margin    : 8vw 0 0 8vw;
		width     : 86vw;
		box-shadow: none;
	}
}

/* ===========================
 *		6 COLUMN GRID
 * =========================*/

$gutter: 2vw;
$gutter-half: $gutter / 2;
$columns: 6;
@mixin grid-column($columns-to-span: 6, $total-columns: 6) {
	width  : 100%;
	height : auto;
	margin : 0 0 2em;
	padding: $gutter-half 0;
	@include respond-to(laptop) {
		width  : $columns-to-span / $total-columns * 100%;
		padding: $gutter-half;
		margin : 0 0 4em;
	}
}
@for $i from 1 through $columns {
	.col-#{$i} {
		@include grid-column($i, $columns);
	}
}

.o-left {
	@include respond-to(tablet) {
		transform: translateX(-5vw) !important;
		z-index  : 5;
	}
}

.o-right {
	@include respond-to(tablet) {
		transform: translateX(5vw) !important;
		z-index  : 5;
	}
}

a[class*="link"] {
	margin : 0;
	padding: 0;
}

.qa {
	position        : relative;
	display         : block;
	padding         : 2em;
	margin-top      : 0;
	z-index         : 10;
	background-color: $color1;
	// mix-blend-mode  : multiply;
	@include respond-to(tablet) {
		//			height: 60vh;
		padding   : 2em;
		margin-top: 20vh;
	}
}

/*=========================
IMAGES
**=======================*/

.v-mat-img {
	width  : 100%;
	height : auto;
	margin : 0;
	padding: 0;
	@include respond-to(laptop) {
		box-shadow: 0.5em 0.5em 0 0.1em $color3T;
	}
}

.v-mat-img-container {
	.v-mat-img-caption {
		bottom : 0;
		width  : 100%;
		margin : 0 0.5em;
		z-index: 2;
	}
}

/*=========================
PULLQUOTES
**=======================*/

div.v-mat-pull-container {
	background: $color1;
	padding   : 5vw;
	@include respond-to(tablet) {
		padding: 2vw;
	}

	.v-mat-pull {
		margin: 0;

		&::before {
			content    : 'â€œ';
			font-size  : 8em;
			line-height: 1;
			position   : absolute;
			top        : 0.25rem;
			left       : 0.25rem;
			z-index    : 0;
			opacity    : 0.6;
			@include respond-to(tablet) {
				top : 0;
				left: 0;
			}
		}
	}

	.v-mat-pull {
		font-size  : 1.5em;
		line-height: 1.4;
		color      : white;
	}
}

/*=========================
ALIGNMENT
**=======================*/

/*.left {
	float: left;
}

.right {
	float: right;
}

.center {
	margin: 0 auto;
	text-align: center;
}

.drop-left {
	float: left;
	//TODO: Figure out the crazy fucking solution for the drop alignments...
}

.drop-right {
	float: right;
	margin-right: 0;
}*/
